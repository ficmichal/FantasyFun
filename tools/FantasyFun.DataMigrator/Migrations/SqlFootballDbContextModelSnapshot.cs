// <auto-generated />
using System;
using FantasyFun.DataMigrator.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FantasyFun.DataMigrator.Migrations
{
    [DbContext(typeof(SqlFootballDbContext))]
    partial class SqlFootballDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FantasyFun.DataMigrator.Models.Country", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("FantasyFun.DataMigrator.Models.League", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint")
                        .HasColumnName("country_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("League", (string)null);
                });

            modelBuilder.Entity("FantasyFun.DataMigrator.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("AwayPlayer1")
                        .HasColumnType("int")
                        .HasColumnName("away_player_1");

                    b.Property<int?>("AwayPlayer10")
                        .HasColumnType("int")
                        .HasColumnName("away_player_10");

                    b.Property<int?>("AwayPlayer11")
                        .HasColumnType("int")
                        .HasColumnName("away_player_11");

                    b.Property<int?>("AwayPlayer2")
                        .HasColumnType("int")
                        .HasColumnName("away_player_2");

                    b.Property<int?>("AwayPlayer3")
                        .HasColumnType("int")
                        .HasColumnName("away_player_3");

                    b.Property<int?>("AwayPlayer4")
                        .HasColumnType("int")
                        .HasColumnName("away_player_4");

                    b.Property<int?>("AwayPlayer5")
                        .HasColumnType("int")
                        .HasColumnName("away_player_5");

                    b.Property<int?>("AwayPlayer6")
                        .HasColumnType("int")
                        .HasColumnName("away_player_6");

                    b.Property<int?>("AwayPlayer7")
                        .HasColumnType("int")
                        .HasColumnName("away_player_7");

                    b.Property<int?>("AwayPlayer8")
                        .HasColumnType("int")
                        .HasColumnName("away_player_8");

                    b.Property<int?>("AwayPlayer9")
                        .HasColumnType("int")
                        .HasColumnName("away_player_9");

                    b.Property<int?>("AwayPlayerX1")
                        .HasColumnType("int")
                        .HasColumnName("away_player_X1");

                    b.Property<int?>("AwayPlayerX10")
                        .HasColumnType("int")
                        .HasColumnName("away_player_X10");

                    b.Property<int?>("AwayPlayerX11")
                        .HasColumnType("int")
                        .HasColumnName("away_player_X11");

                    b.Property<int?>("AwayPlayerX2")
                        .HasColumnType("int")
                        .HasColumnName("away_player_X2");

                    b.Property<int?>("AwayPlayerX3")
                        .HasColumnType("int")
                        .HasColumnName("away_player_X3");

                    b.Property<int?>("AwayPlayerX4")
                        .HasColumnType("int")
                        .HasColumnName("away_player_X4");

                    b.Property<int?>("AwayPlayerX5")
                        .HasColumnType("int")
                        .HasColumnName("away_player_X5");

                    b.Property<int?>("AwayPlayerX6")
                        .HasColumnType("int")
                        .HasColumnName("away_player_X6");

                    b.Property<int?>("AwayPlayerX7")
                        .HasColumnType("int")
                        .HasColumnName("away_player_X7");

                    b.Property<int?>("AwayPlayerX8")
                        .HasColumnType("int")
                        .HasColumnName("away_player_X8");

                    b.Property<int?>("AwayPlayerX9")
                        .HasColumnType("int")
                        .HasColumnName("away_player_X9");

                    b.Property<int?>("AwayPlayerY1")
                        .HasColumnType("int")
                        .HasColumnName("away_player_Y1");

                    b.Property<int?>("AwayPlayerY10")
                        .HasColumnType("int")
                        .HasColumnName("away_player_Y10");

                    b.Property<int?>("AwayPlayerY11")
                        .HasColumnType("int")
                        .HasColumnName("away_player_Y11");

                    b.Property<int?>("AwayPlayerY2")
                        .HasColumnType("int")
                        .HasColumnName("away_player_Y2");

                    b.Property<int?>("AwayPlayerY3")
                        .HasColumnType("int")
                        .HasColumnName("away_player_Y3");

                    b.Property<int?>("AwayPlayerY4")
                        .HasColumnType("int")
                        .HasColumnName("away_player_Y4");

                    b.Property<int?>("AwayPlayerY5")
                        .HasColumnType("int")
                        .HasColumnName("away_player_Y5");

                    b.Property<int?>("AwayPlayerY6")
                        .HasColumnType("int")
                        .HasColumnName("away_player_Y6");

                    b.Property<int?>("AwayPlayerY7")
                        .HasColumnType("int")
                        .HasColumnName("away_player_Y7");

                    b.Property<int?>("AwayPlayerY8")
                        .HasColumnType("int")
                        .HasColumnName("away_player_Y8");

                    b.Property<int?>("AwayPlayerY9")
                        .HasColumnType("int")
                        .HasColumnName("away_player_Y9");

                    b.Property<int>("AwayTeamApiId")
                        .HasColumnType("int")
                        .HasColumnName("away_team_api_id");

                    b.Property<int>("AwayTeamGoal")
                        .HasColumnType("int")
                        .HasColumnName("away_team_goal");

                    b.Property<string>("Card")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("card");

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("country_id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("Goal")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("goal");

                    b.Property<int?>("HomePlayer1")
                        .HasColumnType("int")
                        .HasColumnName("home_player_1");

                    b.Property<int?>("HomePlayer10")
                        .HasColumnType("int")
                        .HasColumnName("home_player_10");

                    b.Property<int?>("HomePlayer11")
                        .HasColumnType("int")
                        .HasColumnName("home_player_11");

                    b.Property<int?>("HomePlayer2")
                        .HasColumnType("int")
                        .HasColumnName("home_player_2");

                    b.Property<int?>("HomePlayer3")
                        .HasColumnType("int")
                        .HasColumnName("home_player_3");

                    b.Property<int?>("HomePlayer4")
                        .HasColumnType("int")
                        .HasColumnName("home_player_4");

                    b.Property<int?>("HomePlayer5")
                        .HasColumnType("int")
                        .HasColumnName("home_player_5");

                    b.Property<int?>("HomePlayer6")
                        .HasColumnType("int")
                        .HasColumnName("home_player_6");

                    b.Property<int?>("HomePlayer7")
                        .HasColumnType("int")
                        .HasColumnName("home_player_7");

                    b.Property<int?>("HomePlayer8")
                        .HasColumnType("int")
                        .HasColumnName("home_player_8");

                    b.Property<int?>("HomePlayer9")
                        .HasColumnType("int")
                        .HasColumnName("home_player_9");

                    b.Property<int?>("HomePlayerX1")
                        .HasColumnType("int")
                        .HasColumnName("home_player_X1");

                    b.Property<int?>("HomePlayerX10")
                        .HasColumnType("int")
                        .HasColumnName("home_player_X10");

                    b.Property<int?>("HomePlayerX11")
                        .HasColumnType("int")
                        .HasColumnName("home_player_X11");

                    b.Property<int?>("HomePlayerX2")
                        .HasColumnType("int")
                        .HasColumnName("home_player_X2");

                    b.Property<int?>("HomePlayerX3")
                        .HasColumnType("int")
                        .HasColumnName("home_player_X3");

                    b.Property<int?>("HomePlayerX4")
                        .HasColumnType("int")
                        .HasColumnName("home_player_X4");

                    b.Property<int?>("HomePlayerX5")
                        .HasColumnType("int")
                        .HasColumnName("home_player_X5");

                    b.Property<int?>("HomePlayerX6")
                        .HasColumnType("int")
                        .HasColumnName("home_player_X6");

                    b.Property<int?>("HomePlayerX7")
                        .HasColumnType("int")
                        .HasColumnName("home_player_X7");

                    b.Property<int?>("HomePlayerX8")
                        .HasColumnType("int")
                        .HasColumnName("home_player_X8");

                    b.Property<int?>("HomePlayerX9")
                        .HasColumnType("int")
                        .HasColumnName("home_player_X9");

                    b.Property<int?>("HomePlayerY1")
                        .HasColumnType("int")
                        .HasColumnName("home_player_Y1");

                    b.Property<int?>("HomePlayerY10")
                        .HasColumnType("int")
                        .HasColumnName("home_player_Y10");

                    b.Property<int?>("HomePlayerY11")
                        .HasColumnType("int")
                        .HasColumnName("home_player_Y11");

                    b.Property<int?>("HomePlayerY2")
                        .HasColumnType("int")
                        .HasColumnName("home_player_Y2");

                    b.Property<int?>("HomePlayerY3")
                        .HasColumnType("int")
                        .HasColumnName("home_player_Y3");

                    b.Property<int?>("HomePlayerY4")
                        .HasColumnType("int")
                        .HasColumnName("home_player_Y4");

                    b.Property<int?>("HomePlayerY5")
                        .HasColumnType("int")
                        .HasColumnName("home_player_Y5");

                    b.Property<int?>("HomePlayerY6")
                        .HasColumnType("int")
                        .HasColumnName("home_player_Y6");

                    b.Property<int?>("HomePlayerY7")
                        .HasColumnType("int")
                        .HasColumnName("home_player_Y7");

                    b.Property<int?>("HomePlayerY8")
                        .HasColumnType("int")
                        .HasColumnName("home_player_Y8");

                    b.Property<int?>("HomePlayerY9")
                        .HasColumnType("int")
                        .HasColumnName("home_player_Y9");

                    b.Property<int>("HomeTeamApiId")
                        .HasColumnType("int")
                        .HasColumnName("home_team_api_id");

                    b.Property<int>("HomeTeamGoal")
                        .HasColumnType("int")
                        .HasColumnName("home_team_goal");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int")
                        .HasColumnName("league_id");

                    b.Property<int>("MatchApiId")
                        .HasColumnType("int")
                        .HasColumnName("match_api_id");

                    b.Property<string>("Season")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("season");

                    b.Property<int>("Stage")
                        .HasColumnType("int")
                        .HasColumnName("stage");

                    b.HasKey("Id");

                    b.ToTable("Match", (string)null);
                });

            modelBuilder.Entity("FantasyFun.DataMigrator.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ApiId")
                        .HasColumnType("int")
                        .HasColumnName("player_api_id");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2")
                        .HasColumnName("birthday");

                    b.Property<int>("FifaApiId")
                        .HasColumnType("int")
                        .HasColumnName("player_fifa_api_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("player_name");

                    b.HasKey("Id");

                    b.ToTable("Player", (string)null);
                });

            modelBuilder.Entity("FantasyFun.DataMigrator.Models.Player_Attribute", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ApiId")
                        .HasColumnType("int")
                        .HasColumnName("player_api_id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<int>("FifaApiId")
                        .HasColumnType("int")
                        .HasColumnName("player_fifa_api_id");

                    b.Property<long?>("OverallRating")
                        .HasColumnType("bigint")
                        .HasColumnName("overall_rating");

                    b.HasKey("Id");

                    b.HasIndex("ApiId");

                    b.ToTable("Player_Attributes", (string)null);
                });

            modelBuilder.Entity("FantasyFun.DataMigrator.Models.Team", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("ApiId")
                        .HasColumnType("bigint")
                        .HasColumnName("team_api_id");

                    b.Property<long?>("FifaApiId")
                        .HasColumnType("bigint")
                        .HasColumnName("team_fifa_api_id");

                    b.Property<string>("LongName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("team_long_name");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("team_short_name");

                    b.HasKey("Id");

                    b.ToTable("Team", (string)null);
                });

            modelBuilder.Entity("FantasyFun.DataMigrator.Models.League", b =>
                {
                    b.HasOne("FantasyFun.DataMigrator.Models.Country", "Country")
                        .WithMany("Leagues")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("FantasyFun.DataMigrator.Models.Player_Attribute", b =>
                {
                    b.HasOne("FantasyFun.DataMigrator.Models.Player", "Player")
                        .WithMany("Players")
                        .HasForeignKey("ApiId")
                        .HasPrincipalKey("ApiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("FantasyFun.DataMigrator.Models.Country", b =>
                {
                    b.Navigation("Leagues");
                });

            modelBuilder.Entity("FantasyFun.DataMigrator.Models.Player", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
